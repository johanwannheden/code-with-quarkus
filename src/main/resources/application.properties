application.host=diskstation.local
application.database=timelog-test
%prod.application.host=192.168.86.32
%prod.application.database=timelog

# datasource configuration
quarkus.datasource.db-kind=mariadb
quarkus.datasource.username=timelog-test
%prod.quarkus.datasource.username=timelog
%prod.quarkus.datasource.password=${TIMELOGDBPW}
quarkus.datasource.password=bPqH@rba85jwljL3
quarkus.datasource.jdbc.url=jdbc:mariadb://${application.host}:3307/${application.database}

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create
%prod.quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.log.format-sql=true
quarkus.hibernate-orm.log.bind-parameters=true

quarkus.hibernate-orm.sql-load-script=import.sql
%prod.quarkus.hibernate-orm.sql-load-script=no-file

# REST
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,PUT,POST
quarkus.http.root-path=/api

# Logging
quarkus.log.level=WARN
quarkus.log.category."org.hibernate".level=DEBUG
%prod.quarkus.log.category."org.hibernate".level=INFO
quarkus.log.category."org.jboss.resteasy".level=DEBUG
%prod.quarkus.log.category."org.jboss.resteasy".level=INFO
quarkus.log.category."javax.validation".level=DEBUG
%prod.quarkus.log.category."javax.validation".level=INFO

# OpenAPI / Swagger
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.enable=true

# Security
quarkus.http.auth.basic=true

# Docker
quarkus.container-image.group=
quarkus.container-image.username=johanwannheden
quarkus.container-image.tag=latest
quarkus.container-image.build=true
quarkus.container-image.name=johanwannheden/timelog-service
quarkus.container-image.registry=docker.io
