version: "3.7"

networks:
  timelog-net:
    driver: bridge

volumes:
  grafana-storage: {}

services:
  timelog-db:
    hostname: timelog-db
    container_name: timelog-db
    image: postgres:13
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "timelog" ]
      timeout: 15s
      interval: 5s
      retries: 5
    restart: always
    environment:
      - POSTGRES_USER=timelog
      - POSTGRES_PASSWORD=${TIMELOGDBPW}
      - POSTGRES_DB=timelog
    ports:
      - 5472:5432
    networks:
      - timelog-net
    volumes:
      - /volume1/docker/timelog-db:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d/
  timelog-service:
    hostname: timelog-service
    container_name: timelog-service
    image: johanwannheden/timelog-service:latest
    depends_on:
      - timelog-db
    environment:
      - QUARKUS_PROFILE=prod
      - JAVA_ENABLE_DEBUG=true
      - TIMELOGDBPW=${TIMELOGDBPW}
    ports:
      - 9443:9443
      - 9080:9080
    networks:
      - timelog-net
  timelog-client:
    hostname: timelog-client
    container_name: timelog-client
    image: johanwannheden/timelog:latest
    depends_on:
      - timelog-service
    ports:
      - 4200:4200
    networks:
      - timelog-net
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    networks:
      - timelog-net
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - timelog-net
    volumes:
    - grafana-storage:/var/lib/grafana
    - ./grafana/provisioning:/etc/grafana/provisioning
  jaeger:
    image: jaegertracing/all-in-one:1.22.0
    hostname: jaeger
    container_name: jaeger
    networks:
      - timelog-net
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 14268:14268
      - 16686:16686
